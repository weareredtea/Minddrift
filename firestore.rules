rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own user data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Room rules - allow authenticated users to create, read, and update rooms
    match /rooms/{roomId} {
      // Allow authenticated users to read room data
      allow read: if request.auth != null;
      
      // Allow authenticated users to create rooms
      allow create: if request.auth != null;
      
      // Allow room creator (host) to update room data
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.creator || 
         request.auth.uid in resource.data.playerOrder);
      
      // Allow room creator to delete rooms
      allow delete: if request.auth != null && request.auth.uid == resource.data.creator;
      
      // Player subcollection rules
      match /players/{playerId} {
        // Allow authenticated users to read player data
        allow read: if request.auth != null;
        
        // Allow users to create/update their own player document
        allow create, update: if request.auth != null && 
          (request.auth.uid == playerId || 
           request.auth.uid == get(/databases/$(database)/documents/rooms/$(roomId)).data.creator);
        
        // Allow room creator to delete player documents
        allow delete: if request.auth != null && 
          request.auth.uid == get(/databases/$(database)/documents/rooms/$(roomId)).data.creator;
      }
      
      // Round subcollection rules
      match /rounds/{roundId} {
        // Allow authenticated users to read round data
        allow read: if request.auth != null;
        
        // Allow room creator to create/update round data
        allow create, update: if request.auth != null && 
          request.auth.uid == get(/databases/$(database)/documents/rooms/$(roomId)).data.creator;
        
        // History subcollection rules
        match /history/{historyId} {
          allow read: if request.auth != null;
          allow create, update: if request.auth != null && 
            request.auth.uid == get(/databases/$(database)/documents/rooms/$(roomId)).data.creator;
        }
      }
    }
    
    // Bundle rules - allow authenticated users to read bundles
    match /bundles/{bundleId} {
      allow read: if request.auth != null;
    }
    
    // User bundles rules - allow users to manage their own bundle purchases
    match /userBundles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Premium features rules
    match /premiumUsers/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Chat messages rules
    match /chat_messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.senderId;
    }
    
    // Custom usernames rules
    match /custom_usernames/{usernameId} {
      // Allow authenticated users to read all usernames (for availability checking)
      allow read: if request.auth != null;
      
      // Allow users to create new usernames
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // Allow users to update/delete their own usernames
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Custom avatars rules (for future custom avatar uploads)
    match /custom_avatars/{avatarId} {
      // Allow authenticated users to read avatars
      allow read: if request.auth != null;
      
      // Allow users to create/update/delete their own custom avatars
      allow create, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Artifacts collection rules (for current room tracking)
    match /artifacts/{appId} {
      // Allow authenticated users to read artifacts
      allow read: if request.auth != null;
      
      // User settings subcollection
      match /users/{userId} {
        // Allow users to read their own settings
        allow read: if request.auth != null && request.auth.uid == userId;
        
        // Settings subcollection
        match /settings/{settingId} {
          // Allow users to read/write their own settings
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
      }
    }
  }
}
